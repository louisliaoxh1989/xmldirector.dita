<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN"
"topic.dtd">
<topic id="syntaxHighlighting">
  <title>Syntax highlighting</title>

  <shortdesc>This chapter explains how you can automatically colorize the
  source code contained in <tt>pre</tt>, <tt>codeblock</tt> or any other
  element specializing <tt>pre</tt>.</shortdesc>

  <body>
    <p>You can automatically colorize the source code contained in
    <tt>pre</tt>, <tt>codeblock</tt> or any other element specializing
    <tt>pre</tt>. This feature, commonly called <term>syntax
    highlighting</term>, has been implemented using an open source software
    component called "<xref format="html"
    href="http://sourceforge.net/apps/mediawiki/xslthl/" scope="external">XSLT
    syntax highlighting</xref>".<indexterm>syntax highlighting</indexterm></p>

    <p>If you want to turn on syntax highlighting in a DITA document, suffice
    to add attribute <tt>outputclass</tt> to a <tt>pre</tt>,
    <tt>codeblock</tt> or any other element specializing <tt>pre</tt>. The
    value of attribute <tt>outputclass</tt> must be any of:
    <tt>language-c</tt>, <tt>language-cpp</tt>, <tt>language-csharp</tt>,
    <tt>language-delphi</tt>, <tt>language-ini</tt>, <tt>language-java</tt>,
    <tt>language-javascript</tt>, <tt>language-m2</tt> (ModulaÂ 2),
    <tt>language-perl</tt>, <tt>language-php</tt>, <tt>language-python</tt>,
    <tt>language-ruby</tt>, <tt>language-tcl</tt>, <tt>language-xml</tt>.</p>

    <p>If you want to customize syntax highlighting for an HTML-based output
    format (XHTML, EPUB, etc), then redefine any of the following CSS
    styles:</p>

    <ul compact="yes">
      <li><tt>.hl-keyword</tt> (keywords of a programming language),</li>

      <li><tt>.hl-string</tt> (string literal),</li>

      <li><tt>.hl-number</tt> (number literal),</li>

      <li><tt>.hl-comment</tt> (any type of comment),</li>

      <li><tt>.hl-doccomment</tt> (comments used as documentation, i.e.
      javadoc, or xmldoc),</li>

      <li><tt>.hl-directive</tt> (preprocessor directive or in XML, a
      processing-instruction),</li>

      <li><tt>.hl-annotation</tt> (annotations or "attributes" as they are
      called in .NET),</li>

      <li><tt>.hl-tag</tt> (XML tag, i.e. element name),</li>

      <li><tt>.hl-attribute</tt> (XML attribute name),</li>

      <li><tt>.hl-value</tt> (XML attribute value),</li>

      <li><tt>.hl-doctype</tt> (<tt>&lt;!DOCTYPE&gt;</tt>and all its
      content).</li>
    </ul>

    <example><title>Customization of the syntax highlighting of a keyword for
    HTML-based output formats</title><pre>.hl-keyword {
    font-weight: bold;
    color: #602060;
}</pre></example>

    <p>How to use a custom CSS stylesheet is explained in <xref
    href="customCSS.dita"/>.</p>

    <p>If you want to customize syntax highlighting for an XSL-FO-based output
    format (PDF, RTF, etc), then redefine any of the following
    <tt>attribute-set</tt>s: <tt>hl-keyword</tt>, <tt>hl-string</tt>,
    <tt>hl-number</tt>, <tt>hl-comment</tt>, <tt>hl-doccomment</tt>,
    <tt>hl-directive</tt>, <tt>hl-annotation</tt>, <tt>hl-tag</tt>,
    <tt>hl-attribute</tt>, <tt>hl-value</tt>, <tt>hl-doctype</tt>.</p>

    <example><title>Customization of the syntax highlighting of a keyword for
    XSL-FO-based output formats</title><pre outputclass="language-xml">&lt;xsl:attribute-set name="hl-keyword" use-attribute-sets="hl-style"&gt;
  &lt;xsl:attribute name="font-weight"&gt;bold&lt;/xsl:attribute&gt;
  &lt;xsl:attribute name="color"&gt;#602060&lt;/xsl:attribute&gt;
&lt;/xsl:attribute-set&gt;</pre></example>

    <p>How to use a custom XSLT stylesheet generating XSL-FO is explained in
    <xref href="customAttributeSet.dita"/>.</p>
  </body>
</topic>
